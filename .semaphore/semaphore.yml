# This file is managed by ServiceBot plugin - Semaphore. The content in this file is created using a common
# template and configurations in service.yml.
# Any modifications made to version, name, agent, and global_job_config will be overwritten by the generated
# content in nightly runs. Code changes made to the remaining sections will not be affected.
# For more information, please refer to the page:
# https://confluentinc.atlassian.net/wiki/spaces/Foundations/pages/2871296194/Add+SemaphoreCI
version: v1.0
name: build-test-release
agent:
  machine:
    type: e2-standard-4
    os_image: ubuntu2004

auto_cancel:
  running:
    when: "branch != 'master'"

execution_time_limit:
  hours: 3

queue:
  - when: "branch != 'master'"
    processing: parallel

global_job_config:
  prologue:
    commands:
      - checkout
      - git submodule update --init --recursive
      - cd deps/librdkafka
      - git fetch origin
      - git checkout v2.6.1
      - cd ../../
      - cache clear

blocks:
  - name: "Linux amd64 (musl): Build and test"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: e2-standard-4
          os_image: ubuntu2004
      prologue:
        commands:
          - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
      jobs:
        - name: "Build from source and test for musl"
          commands:
            - docker run -v "$(pwd):/v" node:18-alpine /v/.semaphore/build-docker.sh

  - name: "Linux arm64 (musl): Build and test"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: r1-standard-4
          os_image: ubuntu2204
      prologue:
        commands:
          - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
      jobs:
        - name: "Build from source and test for musl"
          commands:
              - docker run -v "$(pwd):/v" node:18-alpine /v/.semaphore/build-docker.sh

  - name: "Linux arm64: Build and test"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: r1-standard-4
          os_image: ubuntu2204
      jobs:
        - name: "Build from source and test"
          commands:
            - export CKJS_LINKING=dynamic
            - npm run install-from-source
            - make test

  - name: 'macOS arm64/m1: Build and test'
    dependencies: []
    task:
      agent:
        machine:
          type: a2-standard-4
          os_image: macos-xcode16
      jobs:
        - name: 'Build from source and test'
          commands:
            - export CKJS_LINKING=dynamic
            - npm run install-from-source
            - make test

  - name: "Linux amd64: Build, test, lint"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: e2-standard-4
          os_image: ubuntu2004
      prologue:
        commands:
          - export CKJS_LINKING=dynamic
          - npm run install-from-source
      jobs:
        - name: "Test"
          commands:
            - make test
        - name: "Promisified Tests"
          commands:
            - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
            - docker compose up -d && sleep 30
            - export NODE_OPTIONS='--max-old-space-size=1536'
            - npx jest --forceExit --no-colors --ci test/promisified/admin/delete_groups.spec.js test/promisified/consumer/pause.spec.js
        - name: "ESLint"
          commands:
            - npx eslint lib/kafkajs

  - name: "Linux amd64: Performance"
    dependencies: [ ]
    task:
      agent:
        machine:
          type: e2-standard-4
          os_image: ubuntu2004
      env_vars:
        - name: TARGET_PRODUCE_PERFORMANCE
          value: "35"
        - name: TARGET_CONSUME_PERFORMANCE
          value: "18"
        - name: TARGET_CTP_PERFORMANCE
          value: "0.02"
      prologue:
        commands:
          - wget -qO - https://packages.confluent.io/deb/7.7/archive.key | sudo apt-key add -
          - sudo add-apt-repository -y "deb https://packages.confluent.io/clients/deb $(lsb_release -cs) main"
          - sudo apt-get update
          - sudo apt-get install -y build-essential gcc g++ make python3
          - sudo apt-get install -y librdkafka-dev bc
          - export CKJS_LINKING=dynamic
          - export BUILD_LIBRDKAFKA=0
          - npm run install-from-source
      jobs:
        - name: "Performance Test"
          commands:
            - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
            - docker compose up -d && sleep 30
            - export NODE_OPTIONS='--max-old-space-size=1536'
            - cd examples/performance
            - npm install
            - bash -c '../../ci/tests/run_perf_test.sh'
            - rm -rf ./node_modules

  - name: "Linux amd64: Release"
    dependencies: [ ]
    run:
      when: "tag =~ '^v[0-9]\\.'"
    task:
      agent:
        machine:
          type: e2-standard-4
          os_image: ubuntu2004
      env_vars:
        - name: ARCHITECTURE
          value: "x64"
        - name: PLATFORM
          value: "linux"
        - name: LIBC
          value: "glibc"
      prologue:
        commands:
          - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
      jobs:
        - name: "Release: LTS:18"
          commands:
            - sem-version node 18.19.0
            - export NODE_ABI=108
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: LTS:20"
          commands:
            - sem-version node 20.10.0
            - export NODE_ABI=115
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 21"
          commands:
            - sem-version node 21.4.0
            - export NODE_ABI=120
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 22"
          commands:
            - sem-version node 22.2.0
            - export NODE_ABI=127
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"

  - name: "Linux arm64: Release"
    dependencies: [ ]
    run:
      when: "tag =~ '^v[0-9]\\.'"
    task:
      agent:
        machine:
          type: r1-standard-4
          os_image: ubuntu2204
      env_vars:
        - name: ARCHITECTURE
          value: "arm64"
        - name: PLATFORM
          value: "linux"
        - name: LIBC
          value: "glibc"
      prologue:
        commands:
          - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
      jobs:
        - name: "Release: LTS:18"
          commands:
            - sem-version node 18.19.0
            - export NODE_ABI=108
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: LTS:20"
          commands:
            - sem-version node 20.10.0
            - export NODE_ABI=115
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 21"
          commands:
            - sem-version node 21.4.0
            - export NODE_ABI=120
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 22"
          commands:
            - sem-version node 22.2.0
            - export NODE_ABI=127
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"

  - name: "Linux amd64 musl: Release"
    dependencies: [ ]
    run:
      when: "tag =~ '^v[0-9]\\.'"
    task:
      agent:
        machine:
          type: e2-standard-4
          os_image: ubuntu2004
      env_vars:
        - name: ARCHITECTURE
          value: "x64"
        - name: PLATFORM
          value: "linux"
        - name: LIBC
          value: "musl"
      prologue:
        commands:
          - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
      jobs:
        - name: "Release: LTS:18"
          commands:
            - export NODE_ABI=108
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-linux-${LIBC}-${ARCHITECTURE}.tar.gz"
            - docker run -v "$(pwd):/v" node:18-alpine /v/.semaphore/build-docker.sh
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: LTS:20"
          commands:
            - export NODE_ABI=115
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-linux-${LIBC}-${ARCHITECTURE}.tar.gz"
            - docker run -v "$(pwd):/v" node:20-alpine /v/.semaphore/build-docker.sh
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 21"
          commands:
            - export NODE_ABI=120
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-linux-${LIBC}-${ARCHITECTURE}.tar.gz"
            - docker run -v "$(pwd):/v" node:21-alpine /v/.semaphore/build-docker.sh
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 22"
          commands:
            - export NODE_ABI=127
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-linux-${LIBC}-${ARCHITECTURE}.tar.gz"
            - docker run -v "$(pwd):/v" node:22-alpine /v/.semaphore/build-docker.sh
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"

  - name: "Linux arm64 musl: Release"
    dependencies: [ ]
    run:
      when: "tag =~ '^v[0-9]\\.'"
    task:
      agent:
        machine:
          type: r1-standard-4
          os_image: ubuntu2204
      env_vars:
        - name: ARCHITECTURE
          value: "arm64"
        - name: PLATFORM
          value: "linux"
        - name: LIBC
          value: "musl"
      prologue:
        commands:
          - '[[ -z $DOCKERHUB_APIKEY ]] || docker login --username $DOCKERHUB_USER --password $DOCKERHUB_APIKEY'
      jobs:
        - name: "Release: LTS:18"
          commands:
            - export NODE_ABI=108
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-linux-${LIBC}-${ARCHITECTURE}.tar.gz"
            - docker run -v "$(pwd):/v" node:18-alpine /v/.semaphore/build-docker.sh
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: LTS:20"
          commands:
            - export NODE_ABI=115
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-linux-${LIBC}-${ARCHITECTURE}.tar.gz"
            - docker run -v "$(pwd):/v" node:20-alpine /v/.semaphore/build-docker.sh
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 21"
          commands:
            - export NODE_ABI=120
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-linux-${LIBC}-${ARCHITECTURE}.tar.gz"
            - docker run -v "$(pwd):/v" node:21-alpine /v/.semaphore/build-docker.sh
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 22"
          commands:
            - export NODE_ABI=127
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-linux-${LIBC}-${ARCHITECTURE}.tar.gz"
            - docker run -v "$(pwd):/v" node:22-alpine /v/.semaphore/build-docker.sh
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"

  - name: "macOS arm64/m1: Release"
    dependencies: [ ]
    run:
      when: "tag =~ '^v[0-9]\\.'"
    task:
      agent:
        machine:
          type: a2-standard-4
          os_image: macos-xcode15
      env_vars:
        - name: ARCHITECTURE
          value: "arm64"
        - name: PLATFORM
          value: "darwin"
        - name: LIBC
          value: "unknown"
      jobs:
        - name: "Release: LTS:18"
          commands:
            - sem-version node 18.19.0
            - export NODE_ABI=108
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: LTS:20"
          commands:
            - sem-version node 20.10.0
            - export NODE_ABI=115
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 21"
          commands:
            - sem-version node 21.4.0
            - export NODE_ABI=120
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 22"
          commands:
            - sem-version node 22.2.0
            - export NODE_ABI=127
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"

  - name: "macOS Intel: Release"
    dependencies: [ ]
    run:
      when: "tag =~ '^v[0-9]\\.'"
    task:
      agent:
        machine:
          type: a1-standard-4
          os_image: macos-xcode15
      env_vars:
        - name: ARCHITECTURE
          value: "x64"
        - name: PLATFORM
          value: "darwin"
        - name: LIBC
          value: "unknown"
      jobs:
        - name: "Release: LTS:18"
          commands:
            - sem-version node 18.19.0
            - export NODE_ABI=108
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: LTS:20"
          commands:
            - sem-version node 20.10.0
            - export NODE_ABI=115
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 21"
          commands:
            - sem-version node 21.4.0
            - export NODE_ABI=120
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"
        - name: "Release: latest: 22"
          commands:
            - sem-version node 22.2.0
            - export NODE_ABI=127
            - export ARTIFACT_KEY="confluent-kafka-javascript-${SEMAPHORE_GIT_TAG_NAME}-node-v${NODE_ABI}-${PLATFORM}-${LIBC}-${ARCHITECTURE}.tar.gz"
            - npm run install-from-source
            - npx node-pre-gyp package
            - ls build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}
            - artifact push workflow "build/stage/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/${ARTIFACT_KEY}"

  - name: 'Packaging: tar all release artifacts'
    dependencies:
      - 'Linux amd64: Release'
      - 'Linux arm64: Release'
      - 'Linux amd64 musl: Release'
      - 'Linux arm64 musl: Release'
      - 'macOS arm64/m1: Release'
      - 'macOS Intel: Release'
    run:
      when: "tag =~ '^v[0-9]\\.'"
    task:
      agent:
        machine:
          type: e2-standard-4
          os_image: ubuntu2004
      jobs:
        - name: "Tarball"
          commands:
            - artifact pull workflow releases
            - tar -czvf releases.${SEMAPHORE_GIT_TAG_NAME}.tar.gz releases
            - artifact push project "releases.${SEMAPHORE_GIT_TAG_NAME}.tar.gz" --destination "releases/${SEMAPHORE_GIT_TAG_NAME}/releases.${SEMAPHORE_GIT_TAG_NAME}.tar.gz"